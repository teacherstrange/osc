# base node image
FROM node:16-bullseye-slim as base

# set for base and all layer that inherit from it
ENV NODE_ENV production

# Install openssl for Prisma
RUN apt-get update && apt-get install -y openssl sqlite3

# Install all node_modules, including dev dependencies
FROM base as deps

WORKDIR /myapp

ADD package.json package-lock.json ./
RUN npm install --legacy-peer-deps --production=false

# Setup production node_modules
FROM base as production-deps

WORKDIR /myapp

COPY --from=deps /myapp/node_modules /myapp/node_modules
ADD package.json package-lock.json ./
RUN npm prune --legacy-peer-deps --production

# Build the app
FROM base as build

WORKDIR /myapp

COPY --from=deps /myapp/node_modules /myapp/node_modules

ADD . .
RUN npm run build

# Finally, build the production image with minimal footprint
FROM base

ENV PORT="8080"
ENV NODE_ENV="production"
ARG SANITY_STUDIO_API_DATASET
ARG SANITY_STUDIO_API_PROJECT_ID
ARG SANITY_STUDIO_API_TOKEN
ENV SANITY_STUDIO_API_DATASET=${SANITY_STUDIO_API_DATASET}
ENV SANITY_STUDIO_API_PROJECT_ID=${SANITY_STUDIO_API_PROJECT_ID}
ENV SANITY_STUDIO_API_TOKEN=${SANITY_STUDIO_API_TOKEN}

WORKDIR /myapp

COPY --from=production-deps /myapp/node_modules /myapp/node_modules

COPY --from=build /myapp/public /myapp/public
COPY --from=build /myapp/package.json /myapp/package.json

ADD . .

EXPOSE 3306
EXPOSE 8080


CMD ["node", "server.js"]
