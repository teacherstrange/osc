@use "sass:list";
@use "sass:map";
@use "sass:meta";

@function deep-map-merge($map, $maps...) {
    $last: list.nth($maps, -1);
    $deep: $last == true;
    $max: if($deep, list.length($maps) - 1, list.length($maps));

    // Loop through all maps in $maps...
    @for $i from 1 through $max {
        // Store current map
        $current: list.nth($maps, $i);

        // If not in deep mode, simply merge current map with map
        @if not $deep {
            $map: map.merge($map, $current);
        } @else {
            // If in deep mode, loop through all tuples in current map
            @each $key, $value in $current {
                // If value is a nested map and same key from map is a nested map as well
                @if meta.type-of($value) == "map" and meta.type-of(map.get($map, $key)) == "map" {
                    // Recursive extend
                    $value: deep-map-merge(map.get($map, $key), $value, true);
                }

                // Merge current tuple with map
                $map: map.merge(
                    $map,
                    (
                        $key: $value
                    )
                );
            }
        }
    }

    @return $map;
}
