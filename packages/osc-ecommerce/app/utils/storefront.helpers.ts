import type { PortableTextBlock } from '@portabletext/types';

/* -------------------------------------------------------------------------------------------------
 * Extract ID from Shopify GID string
 * -----------------------------------------------------------------------------------------------*/
/**
 * Extract ID from Shopify GID string (all values after the last slash)
 * e.g. gid://shopify/Product/12345 => 12345
 *
 * @param gid - The GID string to extract the ID from.
 * @returns The ID extracted from the GID string.
 */
export const extractIdFromGid = (gid: string) => {
    if (!gid) return;

    const match = gid?.match(/[^/]+$/i);

    return match && match[0];
};

/* -------------------------------------------------------------------------------------------------
 * Create Sanity product ID from Shopify ID
 * -----------------------------------------------------------------------------------------------*/
/**
 * Create a Sanity product ID from a Shopify ID.
 * e.g. 12345 => shopifyProduct-12345
 * This matches the id generated by the Sanity connect app in Shopify.
 *
 * @param id - The Shopify ID to create a Sanity product ID from.
 * @returns A Sanity product ID.
 */
export const createSanityProductID = (id: string) => {
    if (!id) return;
    const prefix = 'shopifyProduct-';

    return prefix + id;
};

/* -------------------------------------------------------------------------------------------------
 * Strip marks from Sanity content
 * -----------------------------------------------------------------------------------------------*/
/**
 * Strip marks from a PortableTextBlock, useful for when you want to return unstyled content from a wysiwyg area.
 *
 * @param portableText - The PortableTextBlock to strip marks from.
 * @returns A PortableTextBlock with marks removed.
 */
export const stripMarks = (portableText: PortableTextBlock) => {
    return {
        ...portableText,
        children: portableText.children.map((child) => {
            return {
                ...child,
                marks: [],
            };
        }),
    };
};
