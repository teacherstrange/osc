@import "../../styles/tools";
@import "../../styles/settings";

/* stylelint-disable selector-class-pattern */

@layer components {
    // Colors
    $accordion-icon-color: var(--color-quaternary);

    // Sizes
    $accordion-icon-base-size: 1em; // make sure the icon matches the height of the text
    $accordion-content-font-size: #{rem($base-fs)}; // design has this fixed across breakpoints

    // Layout
    $accordion-trigger-padding: $space-l; // design has this fixed across breakpoints
    $accordion-item-border: 1px solid var(--color-quinary);

    // Transitions
    $accordion-transition-duration: 0.3s;
    $accordion-transition-timing-func: cubic-bezier(0.87, 0, 0.13, 1);

    .c-accordion {
        $self: &;

        &__header {
            margin-bottom: 0;
            font-weight: $fw-bold;
        }

        &__icon {
            width: $accordion-icon-base-size;
            height: $accordion-icon-base-size;
            margin-top: 0.125em; // align the icon with the middle of the text
            font-size: var(--accordion-icon-size);

            &--plusminus > :first-child {
                // prettier-ignore
                transition:
                    opacity $accordion-transition-duration $accordion-transition-timing-func,
                    visibility $accordion-transition-duration $accordion-transition-timing-func;
            }

            &--chevron {
                // prettier-ignore
                transition:
                    transform $accordion-transition-duration
                    $accordion-transition-timing-func;
            }

            &--primary {
                --accordion-icon-size: 1.1rem;

                color: $accordion-icon-color;
            }

            &--secondary {
                --accordion-icon-size: 1.6em;

                grid-column: 3 / -1;
                color: currentcolor;
            }

            &--tertiary {
                @include mq($mq-mob, max) {
                    display: none;
                }
            }
        }

        &__trigger {
            position: relative;
            display: grid;
            grid-template-columns: 1fr auto;
            align-items: center;
            box-sizing: border-box;
            width: 100%;
            font-size: var(--accordion-trigger-font-size);
            font-weight: $fw-bold;
            text-align: left;
            transition: color $accordion-transition-duration $accordion-transition-timing-func;
            cursor: pointer;

            @include mq($mq-mob) {
                gap: $space-2xl;
            }

            &:hover {
                color: var(--color-quaternary);
            }

            &[data-state="open"] {
                .c-accordion__icon {
                    &--plusminus > :first-child {
                        opacity: 0;
                        visibility: hidden;
                    }

                    &--chevron {
                        transform: rotate(180deg);
                    }
                }
            }

            /* stylelint-disable-next-line plugin/selector-bem-pattern */
            > span {
                grid-column: 1 / 2;
            }

            &--primary {
                --accordion-trigger-font-size: #{rem($base-fs * 1.25)}; // design has this fixed across breakpoints

                padding: $accordion-trigger-padding 0 0;
            }

            &--secondary {
                --accordion-icon-size: 1.6em;
                --accordion-trigger-font-size: #{$fs-s};

                // Add new column to the grid so we can centre the text accurately
                grid-template-columns: minmax(0, var(--accordion-icon-size)) 1fr auto;
                padding: $space-l $space-xl;
                text-align: center;
                text-transform: uppercase;
                letter-spacing: $ls-s;

                /* stylelint-disable-next-line plugin/selector-bem-pattern */
                > span {
                    grid-column: 2 / 3;
                }

                @include mq($mq-mob) {
                    gap: $space-m;
                }

                &[data-state="open"] {
                    color: var(--color-quaternary);
                }
            }

            &--tertiary {
                --accordion-trigger-font-size: #{rem($base-fs * 1.5)}; // design has this fixed across breakpoints

                grid-template-columns: 1fr auto;
                padding: $space-2xs $space-l;
                background-color: var(--color-neutral-200);
                color: var(--color-quaternary);
                text-align: left;
                text-transform: none;
                letter-spacing: normal;

                // prettier-ignore
                transition: background-color $accordion-transition-duration $accordion-transition-timing-func;

                &:hover {
                    background-color: var(--color-quinary);
                }

                /* stylelint-disable-next-line plugin/selector-bem-pattern */
                > span {
                    grid-column: 1 / 2;
                }
            }

            &--quaternary {
                --accordion-trigger-font-size: #{rem($base-fs)};

                padding: $space-2xs $space-l;
                font-weight: $fw-light;

                &:hover {
                    color: var(--color-secondary);
                }
            }
        }

        &__item {
            &--primary {
                &:not(:last-child) {
                    padding-bottom: $accordion-trigger-padding;
                    border-bottom: $accordion-item-border;
                }
            }

            &--secondary,
            &--quaternary {
                border: $accordion-item-border;

                &:not(:last-child) {
                    padding-bottom: 0;
                    border-bottom: none;
                }
            }

            &--tertiary {
                padding-bottom: 0;
                border: $accordion-item-border;

                + #{$self}__item {
                    margin-top: $space-2xl;
                }
            }
        }

        &__content {
            max-width: 100%;
            overflow: hidden;
            font-size: $accordion-content-font-size;
            font-weight: $fw-light;

            &[data-state="open"] {
                // prettier-ignore
                animation: slide-down $accordion-transition-duration $accordion-transition-timing-func;
            }

            &[data-state="closed"] {
                height: 0;
                animation: slide-up $accordion-transition-duration $accordion-transition-timing-func;
            }

            &--primary {
                max-width: 64ch;
            }
        }

        &__text {
            &--primary {
                padding: $space-xs 0;
            }

            &--secondary {
                padding: 0 $space-xl $space-xl;
            }

            &--tertiary {
                padding: $space-2xl;
            }

            &--quaternary {
                padding: $space-2xs;
            }
        }
    }

    @keyframes slide-down {
        from {
            height: 0;
        }

        to {
            // Radix specific custom property
            height: var(--radix-accordion-content-height);
        }
    }

    @keyframes slide-up {
        from {
            // Radix specific custom property
            height: var(--radix-accordion-content-height);
        }

        to {
            height: 0;
        }
    }
}
