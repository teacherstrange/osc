/* stylelint-disable selector-class-pattern */
@use "../../styles/settings" as *;
/* stylelint-disable plugin/selector-bem-pattern */

// Remove the pseudo element and hover effect for the button variants
@mixin remove-pseudo-element {
    &::after,
    > span::after {
        display: none;
    }

    &:hover > span {
        transform: none;
    }
}

// Set disabled styles for the button variants
@mixin variant-disabled-state {
    &[disabled] {
        --btn-bg-color: transparent;

        &:hover {
            --btn-fg-color: var(--color-secondary);
        }
    }
}

// Reset the typography for the button variants
@mixin reset-typography {
    text-transform: none;
    letter-spacing: initial;
}

.c-btn,
.c-btn__inner {
    position: relative;
    display: inline-flex;
    align-items: center;
    justify-content: center;
    box-sizing: border-box;
}

.c-btn {
    // Colours
    --btn-bg-color: var(--color-secondary);
    --btn-hover-bg-color: var(--color-primary);
    --btn-fg-color: var(--color-tertiary);
    --btn-hover-fg-color: var(--color-primary);

    // Border
    --btn-border: solid 3px var(--btn-bg-color);

    // Offset the pseudo element to create the shadow effect
    --btn-offset: 6px;

    // Transitions
    --btn-transition-duration: 0.2s;
    --btn-transition-timing-function: ease-in;

    color: var(--btn-fg-color);
    font-size: var(--font-scale-centi);
    font-weight: $weight-bold;
    text-align: center;
    text-decoration: none;
    text-transform: uppercase;
    white-space: nowrap;
    letter-spacing: 0.188em;
    cursor: pointer;
    pointer-events: auto;

    &::after {
        position: absolute;
        bottom: calc(var(--btn-offset) * -1); // negative offset
        left: var(--btn-offset);
        width: 100%;
        height: 100%;
        background-color: transparent;
        border-right: var(--btn-border);
        border-bottom: var(--btn-border);
        content: "";
    }

    &__inner {
        z-index: 1;
        width: 100%;
        padding: var(--space-scale-centi) var(--space-scale-epsilon);
        background-color: var(--btn-bg-color);
        transition:
            background-color var(--btn-transition-duration)
            var(--btn-transition-timing-function),
            transform var(--btn-transition-duration) var(--btn-transition-timing-function);
        gap: 0.6em;
        pointer-events: none; // We will want to prevent bubbling/capturing of events on the inner span
    }

    &:hover > span {
        background-color: var(--btn-hover-bg-color);
        transform: translate(var(--btn-offset), var(--btn-offset));
    }

    svg {
        flex-shrink: 0;
        width: 1em; // Make sure svg scales with the font-size
        height: 1em; // Make sure svg scales with the font-size
        font-size: 1.4em;
    }

    &[disabled] {
        opacity: 0.75;
        cursor: not-allowed;

        &:hover > span {
            background-color: var(--btn-bg-color);
            transform: none;
        }
    }

    // *----------------------------------*/
    //  Variants
    // --primary not included as it would be the default
    // *----------------------------------*/
    &--secondary,
    &--tertiary {
        --btn-bg-color: transparent;
        --btn-fg-color: var(--color-secondary);
        --btn-hover-bg-color: var(--color-secondary);

        border: 1px solid var(--color-secondary);

        @include variant-disabled-state;
        @include remove-pseudo-element;

        /* stylelint-disable-next-line no-descending-specificity */
        > span {
            transition:
                color var(--btn-transition-duration) var(--btn-transition-timing-function),
                background-color var(--btn-transition-duration)
                var(--btn-transition-timing-function);
        }

        &:hover {
            --btn-fg-color: var(--color-tertiary);
        }
    }

    /* stylelint-disable-next-line no-descending-specificity */
    &--tertiary {
        border: 1px solid var(--color-quinary);
        font-weight: $weight-light;

        @include reset-typography;
    }

    &--quaternary {
        --btn-bg-color: transparent;
        --btn-hover-bg-color: transparent;
        --btn-fg-color: var(--color-secondary);

        border: none;
        font-weight: $weight-reg;

        @include reset-typography;
        @include variant-disabled-state;
        @include remove-pseudo-element;

        /* stylelint-disable-next-line no-descending-specificity */
        > span {
            padding: 0;
            gap: 0.8em;
        }

        &:hover {
            --btn-fg-color: var(--btn-hover-fg-color);
        }

        &.c-btn--sm {
            padding: 0;
        }
    }

    &--quinary {
        --btn-bg-color: var(--color-septenary);
        --btn-fg-color: var(--color-secondary);
        --btn-hover-fg-color: var(--color-tertiary);

        border: none;

        @include remove-pseudo-element;

        &:hover {
            --btn-fg-color: var(--btn-hover-fg-color);
        }
    }

    &--septenary {
        --btn-bg-color: var(--color-tertiary);
        --btn-hover-bg-color: var(--color-tertiary);
        --btn-fg-color: var(--color-secondary);
    }

    &--octonary {
        --btn-bg-color: var(--color-undenary);
        --btn-fg-color: var(--color-tertiary);
        --btn-hover-bg-color: var(--color-undenary);
    }

    // *----------------------------------*/
    //  Sizes
    //  --md not included as it would be the default
    // *----------------------------------*/
    &--sm {
        /* stylelint-disable-next-line no-descending-specificity */
        > span {
            padding: var(--space-scale-milli) var(--space-scale-zeta);
        }
    }

    /* stylelint-disable-next-line no-descending-specificity */
    &--full,
    &--full > span {
        width: 100%;
    }

    // *----------------------------------*/
    //  Loading
    // *----------------------------------*/
    &.is-loading {
        cursor: auto;
        pointer-events: none;
    }
}

// *----------------------------------*/
//  Button Group
// *----------------------------------*/
.c-btn-group {
    display: flex;
    gap: var(--space-scale-zeta);
    flex-wrap: wrap;
    align-items: center;

    &--column {
        flex-direction: column;
        align-items: flex-start;
    }
}

// *----------------------------------*/
//  Button Loader
// *----------------------------------*/
.c-btn-loader {
    display: flex;
    gap: 0.25em;

    &__dot {
        width: 2px;
        height: 2px;
        background-color: currentcolor;
        border-radius: 50%;

        // Start here so we have a smoother transition when switching the loading state on
        transform: translateY(0.2em);
        animation: bounce 1s ease-in-out infinite;

        &:nth-child(1) {
            animation-delay: 0s;
        }

        &:nth-child(2) {
            animation-delay: 0.1s;
        }

        &:nth-child(3) {
            animation-delay: 0.2s;
        }
    }
}

@keyframes bounce {
    0%,
    100% {
        transform: translateY(0.2em);
    }

    50% {
        transform: translateY(-0.2em);
    }
}
