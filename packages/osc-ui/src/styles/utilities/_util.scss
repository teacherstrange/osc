@use "sass:map";
@use "sass:string";
@use "../settings" as *;
@use "../tools" as *;
@use "../tools/functions" as *;

///*----------------------------------*\
//  #UTILITIES
//\*----------------------------------*/
//
//  A collection of utilities that allow for quickly applying small styling tweaks to components.
//  NOTE: We are using PurgeCss to remove unused classes however please use this file sparingly.
//
//\*----------------------------------*/
//
// Usage:
// <div class="u-mt-micro"></div>

@function scales-map($scale: "fixed") {
    $map: ();

    @each $step in scale-token("steps") {
        @if ($scale == "relative") {
            $map: map.set($map, $step, var(--font-scale-#{$step}));
        } @else {
            $map: map.set($map, $step, var(--space-scale-#{$step}));
        }
    }

    @return $map;
}

$osc-config: (
    margin-top: (
        prefix: "mt",
        values: (
            scales-map("relative")
        )
    ),
    margin-bottom: (
        prefix: "mb",
        values: (
            scales-map("relative")
        )
    ),
    margin-right: (
        prefix: "mr",
        values: (
            scales-map("relative")
        )
    ),
    margin-left: (
        prefix: "ml",
        values: (
            scales-map("relative")
        )
    ),
    margin: (
        prefix: "m",
        values: (
            scales-map("relative")
        )
    ),
    padding-top: (
        prefix: "pt",
        values: (
            scales-map()
        )
    ),
    padding-right: (
        prefix: "pr",
        values: (
            scales-map()
        )
    ),
    padding-bottom: (
        prefix: "pb",
        values: (
            scales-map()
        )
    ),
    padding-left: (
        prefix: "pl",
        values: (
            scales-map()
        )
    ),
    padding: (
        prefix: "p",
        values: (
            scales-map()
        )
    ),
    border-radius: (
        prefix: "br",
        values: (
            10px
        )
    ),
    line-height: (
        prefix: "lh",
        values: (
            "1": 1,
            "1-25": 1.25,
            "1-33": 1.33,
            "1-5": 1.5,
            "1-75": 1.75
        )
    ),
    overflow: (
        prefix: "ov",
        values: (
            auto,
            hidden,
            visible
        )
    ),
    font-weight: (
        prefix: "text",
        values: (
            "bold": $weight-bold,
            "reg": $weight-reg
        )
    ),
    font-style: (
        prefix: "text",
        values: (
            italic
        )
    ),
    text-transform: (
        prefix: "text",
        values: (
            uppercase,
            lowercase,
            underline
        )
    ),
    text-align: (
        prefix: "text",
        values: (
            center,
            right,
            left
        )
    )
);

@each $property, $values in $osc-config {
    $prefix: map.get($values, prefix);
    $values: map.get($values, values);

    @each $key, $value in $values {
        .u-#{$prefix}-#{strip-unit($key)} {
            @if ($value) {
                #{$property}: $value;
            } @else {
                #{$property}: $key;
            }
        }
    }
}

@include mq(mq-token("tab"), max) {
    .u-plr-0\@tab {
        padding-right: 0;
        padding-left: 0;
    }
}

.sr-only:not(:focus):not(:active) {
    position: absolute;
    width: 1px;
    height: 1px;
    overflow: hidden;
    white-space: nowrap;
    clip: rect(0 0 0 0);
    clip-path: inset(50%);
}

[hidden] {
    // stylelint-disable-next-line declaration-no-important
    display: none !important;
}

.u-hidden {
    &-from\@tab {
        @include mq(mq-token("tab-lrg")) {
            display: none;
        }
    }

    &-from\@desk-med {
        @include mq(mq-token("desk-med")) {
            display: none;
        }
    }

    &-until\@tab {
        @include mq(mq-token("tab"), max) {
            display: none;
        }
    }

    &-until\@desk {
        @include mq(mq-token("desk"), max) {
            display: none;
        }
    }

    &-until\@desk-med {
        @include mq(mq-token("desk-med"), max) {
            display: none;
        }
    }
}

// generate classes for each custom property in settings/_colors.scss
// we're assuming the default map will include the same keys as the other themes
@each $name, $value in color-token("default") {
    [data-t-color="#{$name}"],
    .u-color-#{$name} {
        @if (string.index($name, 'gradient')) {
            color: transparent;
            background-image: var(--color-#{$name});
            background-size: 100%;
            background-repeat: repeat;
            background-clip: text;
            -webkit-background-clip: text;
        } @else {
            color: var(--color-#{$name});
        }
    }
}

// Backgrounds
@each $name, $value in color-token("default") {
    [data-bg-color="#{$name}"],
    .u-bg-color-#{$name} {
        @if (string.index($name, 'gradient')) {
            background-image: var(--color-#{$name});
        } @else {
            background-color: var(--color-#{$name});
        }
    }
}

// Text utilities which can't be generated by our map
// Usage:
// <div class="u-text-reset"></div>
.u-text {
    &-reset {
        text-decoration: none;
        text-transform: none;
    }

    &-baseline {
        display: block;
        line-height: 1;
    }
}

[data-line-clamp] {
    display: box;
    margin-bottom: $global-spacing-s;
    overflow: hidden;
    text-overflow: ellipsis;
    -webkit-box-orient: vertical;
}

@for $clamp-i from 1 through 5 {
    [data-line-clamp="#{$clamp-i}"] {
        -webkit-line-clamp: #{$clamp-i};

        // max-height: calc(
        //     (math.div(typography.$base-font-size, 10) * 4)
        //     * #{global.$global-scale-ratio}
        // );
    }
}

.u-line {
    display: block;
    width: 100px;
    height: 2px;
    background-color: var(--color-secondary);
    transform: scaleY(0.5);
}

.u-skeleton-box {
    position: relative;
    display: inline-block;
    height: 1em;
    overflow: hidden;
    background-color: #dce3e3;

    &::after {
        position: absolute;
        top: 0;
        right: 0;
        bottom: 0;
        left: 0;
        background-image: linear-gradient(
            90deg,
            rgba(#fff, 0) 0,
            rgba(#fff, 0.2) 20%,
            rgba(#fff, 0.5) 60%,
            rgba(#fff, 0)
        );
        transform: translateX(-100%);
        animation: shimmer 1s $ease-in-out-cubic infinite;
        content: "";
    }

    @keyframes shimmer {
        100% {
            transform: translateX(100%);
        }
    }

    .is-loaded & {
        display: none;
    }
}

.is-sticky {
    position: sticky;
    top: 0;
}
