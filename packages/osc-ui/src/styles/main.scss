@charset "UTF-8";
@use "sass:meta";

/* =============================================================================
   Primary styles
   ========================================================================== */

/*
  Contents
  --------
    0 	$GENERIC
	1 	$THEME
	2 	$ELEMENTS
	3 	$OBJECTS
	4 	$TYPOGRAPHY
	5	$COMPONENTS
	6 	$UTILITIES
*/

@layer
    generics,
    theme,
    elements,
    objects,
    typography,
    components,
    utilities;

/* ============================
// $GENERIC
// High Level Styles i.e. Normalize//CSS Resets
// --- Can be employed across multiple sites without the need to edit or adjust
*/

@layer generics {
    @include meta.load-css("generic/reset");
    @include meta.load-css("generic/normalize");
}

/* ============================
// $THEME
// Define your colour themes
*/

@layer theme {
    @include meta.load-css("theme/theme");
}

/* ============================
// $ELEMENTS
// Single HTML element selectors without classes
*/

@layer elements {
    @include meta.load-css("elements/address");
    @include meta.load-css("elements/iframe");
    @include meta.load-css("elements/image");
    @include meta.load-css("elements/input");
    @include meta.load-css("elements/list");
    @include meta.load-css("elements/page");
    @include meta.load-css("elements/table");
    @include meta.load-css("elements/type");
}

/* ============================
// $OBJECTS
// Classes for page structure typically following the OOCSS methodology
// The first layer in which we find class-level specificity
*/

@layer objects {
    @include meta.load-css("objects/ar");
    @include meta.load-css("objects/container");
    @include meta.load-css("objects/flex");
    @include meta.load-css("objects/img");
    @include meta.load-css("objects/media");
    @include meta.load-css("objects/row");
    @include meta.load-css("objects/grid");
    @include meta.load-css("objects/bg");
    @include meta.load-css("objects/list");
    @include meta.load-css("objects/main");
    @include meta.load-css("objects/icon");
    @include meta.load-css("objects/page");
}

/* ============================
// $TYPOGRAPHY
// Classes for the display and control of your typography.
// These elements sit loosely between objects and components and in turn can be overridden on a piece of UI
*/

@layer typography {
    @include meta.load-css("typography/font");
}

/* ============================
//	$COMPONENTS
//  Classes for styling any & all UI elements (often combined with the structure of object classes)
//  Keep to DRY principles  ( [D]ont [R]epeat [Y]ourself )
*/

// OUR SCSS COMPONENT STYLES ARE LOADED VIA OUR UI LIBRARY, @OSC-UI //

/* ============================
// $UTILITIES
// utilities classes in accordance with DRY mentality.
// Eliminates the need to create specific classes to perform simple tasks
// NOTE: Use sparingly
*/

@layer utilities {
    @include meta.load-css("utilities/util");
    @include meta.load-css("utilities/anim");
}
