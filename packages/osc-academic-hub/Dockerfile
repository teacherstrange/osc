FROM node:17-alpine3.12

WORKDIR /app

RUN apk update

# Install openssl for Prisma
RUN apk add openssl

# Install node-gyp dependencies
RUN apk add --no-cache g++ make py3-pip

# Add main package.json and app dependencies here
ADD package.json package-lock.json ./
ADD packages/osc-academic-hub/package.json /app/packages/osc-academic-hub/
ADD packages/osc-ui/package.json /app/packages/osc-ui/
ADD packages/osc-design-tokens/package.json /app/packages/osc-design-tokens/

# Install all node_modules, including dev dependencies
RUN npm install

# Add the rest of the files
ADD . .

ARG PLANETSCALE_PRISMA_DATABASE_URL_STAGING
ENV PLANETSCALE_PRISMA_DATABASE_URL=${PLANETSCALE_PRISMA_DATABASE_URL_STAGING}?sslaccept=strict&sslcert=./cacert.pem
ENV PORT=8080
ENV NODE_ENV=production
ARG VAPID_PUBLIC_KEY
ARG VAPID_PRIVATE_KEY
ENV VAPID_PUBLIC_KEY=${VAPID_PUBLIC_KEY}
ENV VAPID_PRIVATE_KEY=${VAPID_PRIVATE_KEY}
ENV SANITY_STUDIO_CI=true
ARG SANITY_STUDIO_API_DATASET
ARG SANITY_STUDIO_API_PROJECT_ID
ARG SANITY_STUDIO_API_TOKEN
ENV SANITY_STUDIO_API_DATASET=${SANITY_STUDIO_API_DATASET}
ENV SANITY_STUDIO_API_PROJECT_ID=${SANITY_STUDIO_API_PROJECT_ID}
ENV SANITY_STUDIO_API_TOKEN=${SANITY_STUDIO_API_TOKEN}
ARG HUBSPOT_ACCESS_TOKEN
ARG HUBSPOT_PORTAL_ID
ENV HUBSPOT_ACCESS_TOKEN=${HUBSPOT_ACCESS_TOKEN}
ENV HUBSPOT_PORTAL_ID=${HUBSPOT_PORTAL_ID}
ARG ALGOLIA_APP_ID
ARG ALGOLIA_ID_SEARCH_ONLY_API_KEY
ARG ALGOLIA_PRIMARY_INDEX
ARG ALGOLIA_PRIMARY_INDEX_GROUPED
ARG ALGOLIA_PRIMARY_INDEX_QUERY_SUGGESTIONS
ENV ALGOLIA_APP_ID=${ALGOLIA_APP_ID}
ENV ALGOLIA_ID_SEARCH_ONLY_API_KEY=${ALGOLIA_ID_SEARCH_ONLY_API_KEY}
ENV ALGOLIA_PRIMARY_INDEX=${ALGOLIA_PRIMARY_INDEX}
ENV ALGOLIA_PRIMARY_INDEX_GROUPED=${ALGOLIA_PRIMARY_INDEX_GROUPED}
ENV ALGOLIA_PRIMARY_INDEX_QUERY_SUGGESTIONS=${ALGOLIA_PRIMARY_INDEX_QUERY_SUGGESTIONS}
ARG PUBLIC_STOREFRONT_API_TOKEN
ARG PRIVATE_STOREFRONT_API_TOKEN
ARG PUBLIC_STOREFRONT_API_VERSION
ARG PUBLIC_STORE_DOMAIN
ENV PUBLIC_STOREFRONT_API_TOKEN=${PUBLIC_STOREFRONT_API_TOKEN}
ENV PRIVATE_STOREFRONT_API_TOKEN=${PRIVATE_STOREFRONT_API_TOKEN}
ENV PUBLIC_STOREFRONT_API_VERSION=${PUBLIC_STOREFRONT_API_VERSION}
ENV PUBLIC_STORE_DOMAIN=${PUBLIC_STORE_DOMAIN}

# Build app and dependencies
RUN npm run build:osc-ui && npm run build:osc-design-tokens && npm run build:osc-academic-hub

# Remove any dev deps as we don't need them now
RUN npm prune --production

# Run the app
EXPOSE 3306
EXPOSE 8080

# connect to production and push
RUN npx prisma db push --accept-data-loss

# connect to main and await dr
ARG PLANETSCALE_PRISMA_DATABASE_URL_MAIN
ENV PLANETSCALE_PRISMA_DATABASE_URL="${PLANETSCALE_PRISMA_DATABASE_URL_MAIN}?sslaccept=strict&sslcert=./cacert.pem"
RUN npx prisma generate

CMD ["npx", "nx", "run", "osc-academic-hub:start"]
