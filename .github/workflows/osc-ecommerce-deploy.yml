name: üöÄ Deploy osc-ecommerce
on:
  pull_request:
    types: [opened, reopened, synchronize, edited, closed]
permissions:
  actions: write
  contents: read

jobs:
  pre-check:
    name: check if workflow should run
    runs-on: ubuntu-latest
    steps:
      - uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            osc-ecommerce:
              - 'packages/osc-ecommerce/**'
            osc-ui:
              - 'packages/osc-ui/**'
            prisma:
              - 'prisma/**'
            pscale:
              - '.pscale/**'
            Dockerfiles:
              - 'Dockerfiles/**'
            osc-ecommerce-db-pr:
              - '.github/workflows/osc-ecommerce-db-pr-branches.yml'
            osc-ecommerce-deploy:
              - '.github/workflows/osc-ecommerce-deploy.yml'
            osc-ecommerce-destroy-apps:
              - '.github/workflows/osc-ecommerce-destroy-apps.yml'
            osc-ecommerce-pr:
              - '.github/workflows/osc-ecommerce-pr-branches.yml'
            issue_templates:
              - '.github/ISSUE_TEMPLATE/**'
        # run only if some file in 'src' folder was changed

      - name: Get PR details
        run: |
          echo "${{ github.base_ref }} == main && ${{ github.event.pull_request.merged }} == true"
          echo "BASE_REF=${{ github.base_ref  }}" >> $GITHUB_ENV
          echo "PR_CLOSED=${{ github.event.pull_request.merged == true }}" >> $GITHUB_ENV

      - if: steps.changes.outputs.changes == '[]'
        name: "Cancel the self CI workflow run"
        uses: potiuk/cancel-workflow-runs@master
        with:
          selfPreservation: false
          cancelMode: self
          notifyPRCancel: true
          notifyPRCancelMessage: Cancelled.
          token: ${{ secrets.GITHUB_TOKEN }}
          sourceRunId: ${{ github.event.workflow_run.id }}

  lint:
    name: ‚¨£ ESLint
    runs-on: ubuntu-latest
    steps:
      - name: üõë Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.9.1

      - name: ‚¨áÔ∏è Checkout repo
        uses: actions/checkout@v3

      - name: ‚éî Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: üì• Download deps
        uses: bahmutov/npm-install@v1
        with:
          useLockFile: false

      - name: üî¨ Lint
        run: npm run lint

  typecheck:
    name:  ¶ TypeScript
    runs-on: ubuntu-latest
    steps:
      - name: üõë Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.9.1

      - name: ‚¨áÔ∏è Checkout repo
        uses: actions/checkout@v3

      - name: ‚éî Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: üì• Download deps
        uses: bahmutov/npm-install@v1
        with:
          useLockFile: false

      - name: üîé Type check
        run: npm run typecheck --if-present

  vitest:
    name: ‚ö° Vitest
    env:
      SANITY_STUDIO_API_DATASET: ${{secrets.SANITY_STUDIO_API_DATASET}}
      SANITY_STUDIO_API_PROJECT_ID: ${{secrets.SANITY_STUDIO_API_PROJECT_ID}}
      SANITY_STUDIO_API_TOKEN: ${{secrets.SANITY_STUDIO_API_TOKEN}}
    runs-on: ubuntu-latest
    steps:
      - name: üõë Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.9.1

      - name: ‚¨áÔ∏è Checkout repo
        uses: actions/checkout@v3

      - name: ‚éî Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - run: npm run setup
      - run: npm run build:osc-ui

      - name: üì• Download deps
        uses: bahmutov/npm-install@v1
        with:
          useLockFile: false

      - name: ‚ö° Run vitest
        run: npm run test

  playwright:
    name: üé≠ Playwright
    env:
      VAPID_PUBLIC_KEY: ${{ secrets.VAPID_PUBLIC_KEY }}
      VAPID_PRIVATE_KEY: ${{ secrets.VAPID_PRIVATE_KEY }}
      SANITY_STUDIO_API_DATASET: ${{secrets.SANITY_STUDIO_API_DATASET}}
      SANITY_STUDIO_API_PROJECT_ID: ${{secrets.SANITY_STUDIO_API_PROJECT_ID}}
      SANITY_STUDIO_API_TOKEN: ${{secrets.SANITY_STUDIO_API_TOKEN}}
      PLANETSCALE_PRISMA_DATABASE_URL: ${{ secrets.PLANETSCALE_PRISMA_DATABASE_URL_CYPRESS }}
      SESSION_SECRET: super-duper-secret
    runs-on: ubuntu-latest
    steps:
      - name: üõë Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.9.1

      - name: ‚¨áÔ∏è Checkout repo
        uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: "npm"

      - run: npm run setup
      - run: npm run build:osc-ui

      - run: rm -v -r ./package.json ./node_modules
      - run: mv -v -f packages/osc-ecommerce/* .

      - run: npm run addDevDeps

      - run: find ./packages -mindepth 1 ! -regex '^./packages/osc-ui\(/.*\)?' -delete

      - name: üì• Download deps
        uses: bahmutov/npm-install@v1
        with:
          useLockFile: false

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: ‚öôÔ∏è Build
        run: npm run build

      - name: üèÉ‚Äç‚ôÇÔ∏è Playwright run
        run: npm run test:e2e:run

      - name: Report
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

  build:
    name: üê≥ Build
    if: echo "${{ github.base_ref }} == main && ${{ github.event.pull_request.merged }} == true"
    needs: pre-check
    runs-on: ubuntu-latest
    steps:
      - name: üõë Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.9.1

      - name: ‚¨áÔ∏è Checkout repo
        uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: "npm"

      # need to delete all other packages in this step

      - run: npm run setup
      - run: npm run build:osc-ui

      - run: rm -v -r ./package.json ./node_modules
      - run: mv -v -f packages/osc-ecommerce/* .

      - name: format head_ref
        uses: bluwy/substitute-string-action@v1
        id: findandreplace
        with:
          _input-text: ${{ github.head_ref }}
          /: "-"

      - name: Get PR details
        run: |
          echo "HEAD_REF=${{ steps.findandreplace.outputs.result }}" >> $GITHUB_ENV
          echo "BASE_REF=${{ github.base_ref  }}" >> $GITHUB_ENV
          echo "PR_CLOSED=${{ github.event.pull_request.merged == true }}" >> $GITHUB_ENV

      - run: npm run addDevDeps

      - run: find ./packages -mindepth 1 ! -regex '^./packages/osc-ui\(/.*\)?' -delete

      - name: üëÄ Read app name
        uses: SebRollen/toml-action@v1.0.0
        id: app_name
        with:
          file: "fly.toml"
          field: "app"

      - name: üê≥ Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      # Setup cache
      - name: ‚ö°Ô∏è Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: üîë Fly Registry Auth
        uses: docker/login-action@v1
        with:
          registry: registry.fly.io
          username: x
          password: ${{ secrets.FLY_API_TOKEN }}

      - name: create connection string to STAGING
        id: create-cs
        if: ${{ env.BASE_REF == 'main' && env.PR_CLOSED == 'true' }}
        timeout-minutes: 3
        env:
          PLANETSCALE_SERVICE_TOKEN_ID: ${{secrets.PLANETSCALE_SERVICE_TOKEN_ID}}
          PLANETSCALE_SERVICE_TOKEN: ${{secrets.PLANETSCALE_SERVICE_TOKEN}}
          ORG_NAME: ${{secrets.ORG_NAME}}
          DB_NAME: ${{secrets.DB_NAME}}
          GITHUB_USER: ${{github.actor}}
          BRANCH_NAME: staging
          PASSWORD_NAME: staging-${{ steps.app_name.outputs.value }}
        run: |
          ./.pscale/cli-helper-scripts/create-branch-connection-string-pr-branches.sh

      - name: create connection string to MAIN
        id: create-cs-main
        if: ${{ env.BASE_REF == 'main' && env.PR_CLOSED == 'true' }}
        timeout-minutes: 3
        env:
          PLANETSCALE_SERVICE_TOKEN_ID: ${{secrets.PLANETSCALE_SERVICE_TOKEN_ID}}
          PLANETSCALE_SERVICE_TOKEN: ${{secrets.PLANETSCALE_SERVICE_TOKEN}}
          ORG_NAME: ${{secrets.ORG_NAME}}
          DB_NAME: ${{secrets.DB_NAME}}
          GITHUB_USER: ${{github.actor}}
          BRANCH_NAME: main
          PASSWORD_NAME: main-${{ steps.app_name.outputs.value }}
        run: |
          ./.pscale/cli-helper-scripts/create-branch-connection-string.sh

      - name: üê≥ Docker build production
        id: docker-build-prod
        if: ${{ env.BASE_REF == 'main' && env.PR_CLOSED == 'true' }}
        uses: docker/build-push-action@v2
        with:
          file: ./Dockerfiles/Dockerfile
          context: .
          push: true
          tags: registry.fly.io/${{ steps.app_name.outputs.value }}:${{ env.HEAD_REF }}-${{ github.sha }}
          build-args: |
            "VAPID_PUBLIC_KEY=${{ secrets.VAPID_PUBLIC_KEY }}"
            "VAPID_PRIVATE_KEY=${{ secrets.VAPID_PRIVATE_KEY }}"
            "COMMIT_SHA=${{ github.sha }}"
            "PLANETSCALE_PRISMA_DATABASE_URL_PRODUCTION=${{ env.MY_DB_URL }}${{ secrets.DB_NAME }}"
            "PLANETSCALE_PRISMA_DATABASE_URL_MAIN=${{ env.MY_DB_URL_MAIN }}${{ secrets.DB_NAME }}"
            "SANITY_STUDIO_API_DATASET=${{secrets.SANITY_STUDIO_API_DATASET}}"
            "SANITY_STUDIO_API_PROJECT_ID=${{secrets.SANITY_STUDIO_API_PROJECT_ID}}"
            "SANITY_STUDIO_API_TOKEN=${{secrets.SANITY_STUDIO_API_TOKEN}}"
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,mode=max,dest=/tmp/.buildx-cache-new

      # This ugly bit is necessary if you don't want your cache to grow forever
      # till it hits GitHub's limit of 5GB.
      # Temp fix
      # https://github.com/docker/build-push-action/issues/252
      # https://github.com/moby/buildkit/issues/1896
      - name: üöö Move cache
        if: steps.docker-build-prod.conclusion != 'skipped'
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

  deploy:
    name: üöÄ Deploy
    runs-on: ubuntu-latest
    needs: [build]

    steps:
      - name: üõë Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.9.1

      - name: ‚¨áÔ∏è Checkout repo
        uses: actions/checkout@v3

      - run: rm -v -r ./package.json
      - run: mv -v -f packages/osc-ecommerce/* .

      - name: format head_ref
        uses: bluwy/substitute-string-action@v1
        id: findandreplace
        with:
          _input-text: ${{ github.head_ref }}
          /: "-"

      - name: Get PR details
        run: |
          echo "HEAD_REF=${{ steps.findandreplace.outputs.result }}" >> $GITHUB_ENV
          echo "BASE_REF=${{ github.base_ref  }}" >> $GITHUB_ENV
          echo "PR_CLOSED=${{ github.event.pull_request.merged == true }}" >> $GITHUB_ENV

      - name: üëÄ Read app name
        uses: SebRollen/toml-action@v1.0.0
        id: app_name
        with:
          file: "fly.toml"
          field: "app"

      - name: Create and merge deployment request to main
        if: ${{ env.BASE_REF == 'main' && env.PR_CLOSED == 'true' }}
        id: create-dr
        timeout-minutes: 3
        env:
          PLANETSCALE_SERVICE_TOKEN_ID: ${{secrets.PLANETSCALE_SERVICE_TOKEN_ID}}
          PLANETSCALE_SERVICE_TOKEN: ${{secrets.PLANETSCALE_SERVICE_TOKEN}}
          ORG_NAME: ${{secrets.ORG_NAME}}
          DB_NAME: ${{secrets.DB_NAME}}
          GITHUB_USER: ${{github.actor}}
          BRANCH_NAME: staging
        run: |
          ./.pscale/cli-helper-scripts/create-dr-to-main.sh "$BRANCH_NAME"

      # target prod, base release
      - name: üöÄ Deploy Production
        id: deploy-production
        if: ${{ env.BASE_REF == 'main' && env.PR_CLOSED == 'true' }}
        uses: superfly/flyctl-actions@1.3
        with:
          args: "deploy --image registry.fly.io/${{ steps.app_name.outputs.value }}:${{ env.HEAD_REF }}-${{ github.sha }}"
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

      - name: delete old connection string to STAGING
        id: delete-cs
        if: steps.deploy-production.conclusion != 'skipped' || steps.deploy-release.conclusion != 'skipped'
        timeout-minutes: 3
        env:
          PLANETSCALE_SERVICE_TOKEN_ID: ${{secrets.PLANETSCALE_SERVICE_TOKEN_ID}}
          PLANETSCALE_SERVICE_TOKEN: ${{secrets.PLANETSCALE_SERVICE_TOKEN}}
          ORG_NAME: ${{secrets.ORG_NAME}}
          DB_NAME: ${{secrets.DB_NAME}}
          GITHUB_USER: ${{github.actor}}
          BRANCH_NAME: staging
          PASSWORD_NAME: staging-${{ steps.app_name.outputs.value }}

        run: |
          ./.pscale/cli-helper-scripts/delete-old-password.sh

      - name: delete old connection string to MAIN
        id: delete-cs-main
        if: steps.delete-cs.conclusion != 'skipped'
        timeout-minutes: 3
        env:
          PLANETSCALE_SERVICE_TOKEN_ID: ${{secrets.PLANETSCALE_SERVICE_TOKEN_ID}}
          PLANETSCALE_SERVICE_TOKEN: ${{secrets.PLANETSCALE_SERVICE_TOKEN}}
          ORG_NAME: ${{secrets.ORG_NAME}}
          DB_NAME: ${{secrets.DB_NAME}}
          GITHUB_USER: ${{github.actor}}
          BRANCH_NAME: main
          PASSWORD_NAME: main-${{ steps.app_name.outputs.value }}
        run: |
          ./.pscale/cli-helper-scripts/delete-old-password.sh
