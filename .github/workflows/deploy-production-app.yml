#
# This workflow takes care of building the apps and
# deploying them to the production url on Fly.io.
#

name: üöÄ Deploy to prod

on:
  workflow_call:
    inputs:
      app_name:
        required: true
        type: string
      dockerfile:
        required: true
        type: string

permissions:
  actions: write
  pull-requests: write
  contents: read

env:
  FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
  FLY_REGION: lhr
  FLY_ORG: open-study-college

jobs:
  log:
    name: ü™µ Log some helpful vars
    runs-on: ubuntu-latest
    steps:
      # Slashes in the ref_name will break Fly's Docker tags.
      - name: Replace slashes in ref_name
        id: clean_ref_name
        uses: frabert/replace-string-action@v2.4
        with:
          pattern: '(\d+)/merge'
          string: "${{ github.ref_name }}"
          replace-with: "$1-merge"
          flags: "g"

      - run: |
          echo "::group::Log some helpful vars"
          echo "üè∑ ref = ${{ github.ref }}"
          echo "üè∑ ref_name = ${{ github.ref_name }}"
          echo "üè∑ CLEAN_REF_NAME = ${{ steps.clean_ref_name.outputs.replaced }}"
          echo "üè∑ event_name = ${{ github.event_name }}"
          echo "üè∑ event.action = ${{ github.event.action }}"
          echo "üè∑ event.number = ${{ github.event.number }}"
          echo "üè∑ github.workspace = ${{ github.workspace }}"
          echo "üè∑ app_name = ${{ inputs.app_name }}"
          echo "üè∑ FLY_ORG = ${{ env.FLY_ORG }}"
          echo "üè∑ FLY_REGION = ${{ env.FLY_REGION }}"
          echo "::endgroup:: "

  build:
    name: üê≥ Build
    runs-on: ubuntu-latest
    steps:
      # Slashes in the ref_name will break Fly's Docker tags.
      - name: Replace slashes in ref_name
        id: clean_ref_name
        uses: frabert/replace-string-action@v2.4
        with:
          pattern: '(\d+)/merge'
          string: "${{ github.ref_name }}"
          replace-with: "$1-merge"
          flags: "g"

      - name: üõë Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.11.0

      - name: ‚¨áÔ∏è Checkout repo
        uses: actions/checkout@v3

      - name: üëÄ Read app name
        uses: SebRollen/toml-action@v1.0.2
        id: app_name
        with:
          file: "./packages/${{inputs.app_name}}/fly.toml"
          field: "app"

      - name: üê≥ Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Setup cache
      - name: ‚ö°Ô∏è Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: üîë Fly Registry Auth
        uses: docker/login-action@v2
        with:
          registry: registry.fly.io
          username: x
          password: ${{ env.FLY_API_TOKEN }}

      - name: üê≥ Docker build
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ${{ inputs.dockerfile }}
          push: true
          tags: registry.fly.io/${{ steps.app_name.outputs.value }}:${{ steps.clean_ref_name.outputs.replaced }}-${{ github.sha }}
          build-args: |
            ALGOLIA_APP_ID=${{secrets.ALGOLIA_APP_ID }}
            ALGOLIA_ID_SEARCH_ONLY_API_KEY=${{ secrets.ALGOLIA_ID_SEARCH_ONLY_API_KEY }}
            ALGOLIA_PRIMARY_INDEX=${{secrets.ALGOLIA_PRIMARY_INDEX }}
            ALGOLIA_PRIMARY_INDEX_GROUPED=${{secrets.ALGOLIA_PRIMARY_INDEX_GROUPED }}
            ALGOLIA_PRIMARY_INDEX_QUERY_SUGGESTIONS=${{ secrets.ALGOLIA_PRIMARY_INDEX_QUERY_SUGGESTIONS }}
            VAPID_PUBLIC_KEY=${{ secrets.VAPID_PUBLIC_KEY }}
            VAPID_PRIVATE_KEY=${{ secrets.VAPID_PRIVATE_KEY }}
            PLANETSCALE_PRISMA_DATABASE_URL_STAGING=${{ secrets.DB_NAME }}
            SANITY_STUDIO_API_DATASET=production
            SANITY_STUDIO_API_PROJECT_ID=${{secrets.SANITY_STUDIO_API_PROJECT_ID}}
            SANITY_STUDIO_API_TOKEN=${{secrets.SANITY_STUDIO_API_TOKEN}}
            PREVIEW_SESSION_SECRET=${{secrets.PREVIEW_SESSION_SECRET}}
            HUBSPOT_ACCESS_TOKEN=${{secrets.HUBSPOT_ACCESS_TOKEN}}
            HUBSPOT_PORTAL_ID=${{secrets.HUBSPOT_PORTAL_ID}}
            PUBLIC_STOREFRONT_API_TOKEN=${{secrets.PUBLIC_STOREFRONT_API_TOKEN}}
            PRIVATE_STOREFRONT_API_TOKEN=${{secrets.PRIVATE_STOREFRONT_API_TOKEN}}
            PUBLIC_STOREFRONT_API_VERSION=${{secrets.PUBLIC_STOREFRONT_API_VERSION}}
            PUBLIC_STORE_DOMAIN=${{secrets.PUBLIC_STORE_DOMAIN}}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max

      # This ugly bit is necessary if you don't want your cache to grow forever
      # till it hits GitHub's limit of 5GB.
      # Temp fix
      # https://github.com/docker/build-push-action/issues/252
      # https://github.com/moby/buildkit/issues/1896
      - name: üöö Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

  deploy_to_prod:
    name: üöÄ Deploy to prod
    runs-on: ubuntu-latest
    needs: [build]

    steps:
      - name: üõë Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.11.0

      - name: ‚¨áÔ∏è Checkout repo
        uses: actions/checkout@v3

      - name: ü™∞ setup-flyctl
        uses: superfly/flyctl-actions/setup-flyctl@master

      - name: üëÄ Read app name
        uses: SebRollen/toml-action@v1.0.2
        id: app_name
        with:
          file: "./packages/${{inputs.app_name}}/fly.toml"
          field: "app"

        # Slashes in the ref_name will break Fly's Docker tags.
      - name: Replace slashes in ref_name
        id: clean_ref_name
        uses: frabert/replace-string-action@v2.4
        with:
          pattern: '(\d+)/merge'
          string: "${{ github.ref_name }}"
          replace-with: "$1-merge"
          flags: "g"

      - name: Create session secret
        # Allow this to fail if the app already exists.
        continue-on-error: true
        run:
          "flyctl secrets set SESSION_SECRET=${{ secrets.FLY_PR_BRANCH_SESSION_SECRET }} PREVIEW_SESSION_SECRET=${{ secrets.PREVIEW_SESSION_SECRET }} --config ./packages/${{steps.app_name.outputs.value}}/fly.toml --app 
          ${{ steps.app_name.outputs.value }}"

      - name: üöÄ Deploy
        id: deploy-pr
        run: flyctl deploy --app ${{ steps.app_name.outputs.value }} --config ./packages/${{steps.app_name.outputs.value}}/fly.toml --image registry.fly.io/${{ steps.app_name.outputs.value }}:${{ steps.clean_ref_name.outputs.replaced }}-${{ github.sha }} --region ${{ env.FLY_REGION }}