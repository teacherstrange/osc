name: PR Branch App for osc-academic-hub
on:
  pull_request:
    types: [opened, reopened, synchronize, ready_for_review]
env:
  FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
  FLY_REGION: iad

jobs:
  pre-check:
    name: check if workflow should run
    runs-on: ubuntu-latest
    steps:
      - uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            osc-api-auth: 
              - 'packages/osc-api-auth/**'
            osc-academic-hub:
              - 'packages/osc-academic-hub/**'
            Dockerfiles:
              - 'Dockerfiles/**'
            osc-academic-hub-pr:
              - '.github/workflows/osc-academic-hub-pr-branches.yml'
            osc-academic-hub-deploy:
              - '.github/workflows/osc-academic-hub-deploy.yml'
            osc-academic-hub-destroy-apps:
              - '.github/workflows/osc-academic-hub-destroy-apps.yml'

      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3

      - if: steps.changes.outputs.changes == '[]' || github.event.pull_request.draft == true
        name: Cancel the self CI workflow run
        run: ./workflow-scripts/cancel.sh

  build:
    needs: pre-check
    name: 🐳 Build PR Branch
    runs-on: ubuntu-latest
    steps:
      - name: 🛑 Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.9.1

      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3

      - name: checkoutCancelSetupBuild
        uses: ./.github/actions/checkoutCancelSetupBuild
        id: checkoutCancelSetupBuild
        with:
          name: "osc-academic-hub"

      - name: readAndLogAppNameAndBranch
        uses: ./.github/actions/readAndLogAppNameAndBranch
        id: readAndLogAppNameAndBranch

      - name: 🐳 Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      # Setup cache
      - name: ⚡️ Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: 🔑 Fly Registry Auth
        uses: docker/login-action@v1
        with:
          registry: registry.fly.io
          username: x
          password: ${{ secrets.FLY_API_TOKEN }}

      - name: create connection string to PR Branch
        id: create-cs-main
        timeout-minutes: 3
        env:
          PLANETSCALE_SERVICE_TOKEN_ID: ${{secrets.PLANETSCALE_SERVICE_TOKEN_ID}}
          PLANETSCALE_SERVICE_TOKEN: ${{secrets.PLANETSCALE_SERVICE_TOKEN}}
          ORG_NAME: ${{secrets.ORG_NAME}}
          DB_NAME: ${{secrets.DB_NAME}}
          GITHUB_USER: ${{github.actor}}
          BRANCH_NAME: staging
          PASSWORD_NAME: pr-${{ github.event.number }}-${{ steps.readAndLogAppNameAndBranch.outputs.app-name }}
        run: |
          ./.pscale/cli-helper-scripts/create-branch-connection-string-pr-branches.sh

      # file: ./Dockerfiles/Dockerfile.pr
      - name: 🐳 Docker build
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: registry.fly.io/${{ steps.readAndLogAppNameAndBranch.outputs.app-name }}:${{ steps.readAndLogAppNameAndBranch.outputs.branch }}-${{ github.sha }}
          build-args: |
            VAPID_PUBLIC_KEY=${{ secrets.VAPID_PUBLIC_KEY}}
            VAPID_PRIVATE_KEY=${{ secrets.VAPID_PRIVATE_KEY}}
            PLANETSCALE_PRISMA_DATABASE_URL_PR=${{ env.MY_DB_URL }}${{ secrets.DB_NAME }}
            COMMIT_SHA=${{ github.sha }}
            "SANITY_STUDIO_API_DATASET=${{secrets.SANITY_STUDIO_API_DATASET}}"
            "SANITY_STUDIO_API_PROJECT_ID=${{secrets.SANITY_STUDIO_API_PROJECT_ID}}"
            "SANITY_STUDIO_API_TOKEN=${{secrets.SANITY_STUDIO_API_TOKEN}}"
          file: ./Dockerfiles/Dockerfile.pr
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,mode=max,dest=/tmp/.buildx-cache-new

      # This ugly bit is necessary if you don't want your cache to grow forever
      # till it hits GitHub's limit of 5GB.
      # Temp fix
      # https://github.com/docker/build-push-action/issues/252
      # https://github.com/moby/buildkit/issues/1896
      - name: 🚚 Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
  deploy:
    needs: build
    name: 🚀 Deploy PR Branch
    runs-on: ubuntu-latest

    # Only run one deployment at a time per PR.
    concurrency:
      group: pr-${{ github.event.number }}

    # Create a GitHub deployment environment per pr branch app so it shows up
    # in the pull request UI.
    environment:
      name: pr-${{ github.event.number }}
      url: ${{ steps.deploy_pr.outputs.url }}

    steps:
      - name: 🛑 Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.9.1

      - name: ⬇️ Checkout repo
        uses: actions/checkout@v2

      - run: rm -v -r ./package.json
      - run: mv -v -f packages/osc-academic-hub/* .

      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: "npm"

      - run: find ./packages -mindepth 1 ! -regex '^./packages/osc-ui\(/.*\)?' -delete

      - name: 👀 Read app name
        uses: SebRollen/toml-action@v1.0.0
        id: app_name
        with:
          file: "fly.toml"
          field: "app"

      - name: What
        run: echo "BRANCH=${GITHUB_REF##*/}" >> $GITHUB_ENV

      - name: Create app
        uses: superfly/flyctl-actions@1.1
        continue-on-error: true
        with:
          args: "apps create pr-${{ github.event.number }}-${{ steps.readAndLogAppNameAndBranch.outputs.app-name }} --org open-study-college"

      - name: Create session secret
        uses: superfly/flyctl-actions@1.1
        continue-on-error: true
        with:
          args: "secrets set SESSION_SECRET=${{ secrets.FLY_PR_BRANCH_SESSION_SECRET }} --config ./fly-pr.toml --app pr-${{ github.event.number }}-${{ steps.readAndLogAppNameAndBranch.outputs.app-name }}"

      - name: echo volumes
        run: echo ${{ steps.list-volume }}

      - name: delete all old volumes
        run: |
          VOLUMES=`flyctl volumes list --json --app pr-${{ github.event.number }}-${{ steps.app_name.outputs.value }}`;
          echo $VOLUMES | jq -r '.[].id' | while read -r id ; do
              echo "Deleting ${id}"
              flyctl volumes delete ${id} -y
          done

      - name: Create volume
        uses: superfly/flyctl-actions@1.1
        continue-on-error: true
        with:
          args: "volumes create data --region lhr --size 1 --app pr-${{ github.event.number }}-${{ steps.readAndLogAppNameAndBranch.outputs.app-name }}"

      - name: 🚀 Deploy PR Branch
        id: deploy_pr
        uses: superfly/fly-pr-review-apps@1.0.0
        with:
          image: registry.fly.io/${{ steps.readAndLogAppNameAndBranch.outputs.app-name }}:${{ steps.readAndLogAppNameAndBranch.outputs.branch }}-${{ github.sha }}
          org: "open-study-college"
          name: pr-${{ github.event.number }}-${{ steps.readAndLogAppNameAndBranch.outputs.app-name }}
          args: "deploy --build-arg SESSION_SECRET=${{ secrets.FLY_PR_BRANCH_SESSION_SECRET }} --app pr-${{ github.event.number }}-${{ steps.readAndLogAppNameAndBranch.outputs.app-name }}"
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

      - name: delete old connection string to BASE_REF
        id: delete-cs
        if: steps.deploy_pr.conclusion != 'skipped'
        timeout-minutes: 3
        env:
          PLANETSCALE_SERVICE_TOKEN_ID: ${{secrets.PLANETSCALE_SERVICE_TOKEN_ID}}
          PLANETSCALE_SERVICE_TOKEN: ${{secrets.PLANETSCALE_SERVICE_TOKEN}}
          ORG_NAME: ${{secrets.ORG_NAME}}
          DB_NAME: ${{secrets.DB_NAME}}
          GITHUB_USER: ${{github.actor}}
          BRANCH_NAME: pr
          PASSWORD_NAME: pr-${{ github.event.number }}-${{ steps.readAndLogAppNameAndBranch.outputs.app-name }}
        run: |
          ./.pscale/cli-helper-scripts/delete-old-password.sh
