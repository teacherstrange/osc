name: PR Branch App for osc-studio
on:
  pull_request:
    types: [opened, reopened, synchronize, ready_for_review]
env:
  FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
  FLY_REGION: iad

# Only run one deployment at a time per PR.
concurrency:
  group: pr-${{ github.event.number }}--studio-pr

jobs:
  pre-check:
    name: check if workflow should run
    runs-on: ubuntu-latest
    steps:
      - uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            composite-actions:
              - '.github/actions/**'
            osc-studio:
              - 'packages/osc-studio/**'
            osc-studio-deploy:
              - '.github/workflows/osc-studio-deploy.yml'
            osc-studio-pr:
              - '.github/workflows/osc-studio-pr-branches.yml'

      - name: ‚¨áÔ∏è Checkout repo
        uses: actions/checkout@v3

      - if: steps.changes.outputs.changes == '[]' || github.event.pull_request.draft == true
        name: Cancel the self CI workflow run
        run: ./workflow-scripts/cancel.sh

      - name: Dump steps context
        env:
          STEPS_CONTEXT: ${{ toJson(steps) }}
        run: echo "$STEPS_CONTEXT"

  build:
    needs: pre-check
    name: üê≥ Build PR Branch
    runs-on: ubuntu-latest
    steps:
      - name: üõë Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.9.1

      - name: ‚¨áÔ∏è Checkout repo
        uses: actions/checkout@v3

      - name: setupBuild
        uses: ./.github/actions/setupBuild
        id: setupBuild

      - name: movePackageToRoot
        uses: ./.github/actions/movePackageToRoot
        id: movePackageToRoot
        with:
          name: "osc-studio"

      - name: readAndLogAppNameAndBranch
        uses: ./.github/actions/readAndLogAppNameAndBranch
        id: readAndLogAppNameAndBranch

      - name: dockerBuild
        uses: ./.github/actions/dockerBuild
        id: dockerBuild
        with:
          APP_NAME: ${{ steps.readAndLogAppNameAndBranch.outputs.app-name }}
          PLANETSCALE_SERVICE_TOKEN_ID: ${{ secrets.PLANETSCALE_SERVICE_TOKEN_ID }}
          PLANETSCALE_SERVICE_TOKEN: ${{ secrets.PLANETSCALE_SERVICE_TOKEN }}
          ORG_NAME: ${{ secrets.ORG_NAME }}
          DB_NAME: ${{ secrets.DB_NAME }}
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
          VAPID_PUBLIC_KEY: ${{ secrets.VAPID_PUBLIC_KEY}}
          VAPID_PRIVATE_KEY: ${{ secrets.VAPID_PRIVATE_KEY}}
          SANITY_STUDIO_API_DATASET: ${{secrets.SANITY_STUDIO_API_DATASET}}
          SANITY_STUDIO_API_PROJECT_ID: ${{secrets.SANITY_STUDIO_API_PROJECT_ID}}
          SANITY_STUDIO_API_TOKEN: ${{secrets.SANITY_STUDIO_API_TOKEN}}
  deploy:
    needs: build
    name: üöÄ Deploy PR Branch
    runs-on: ubuntu-latest

    # Create a GitHub deployment environment per pr branch app so it shows up
    # in the pull request UI.
    environment:
      name: pr-${{ github.event.number }}
      url: ${{ steps.deploy_pr.outputs.url }}

    steps:
      - name: üõë Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.9.1

      - name: ‚¨áÔ∏è Checkout repo
        uses: actions/checkout@v3

      - name: setupBuild
        uses: ./.github/actions/setupBuild
        id: setupBuild

      - name: movePackageToRoot
        uses: ./.github/actions/movePackageToRoot
        id: movePackageToRoot
        with:
          name: "osc-studio"

      - name: readAndLogAppNameAndBranch
        uses: ./.github/actions/readAndLogAppNameAndBranch
        id: readAndLogAppNameAndBranch

      - name: deployment
        uses: ./.github/actions/deployment
        id: deployment
        with:
          APP_NAME: ${{ steps.readAndLogAppNameAndBranch.outputs.app-name }}
          FLY_PR_BRANCH_SESSION_SECRET: ${{ secrets.FLY_PR_BRANCH_SESSION_SECRET}}
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN}}
          PLANETSCALE_SERVICE_TOKEN_ID: ${{ secrets.PLANETSCALE_SERVICE_TOKEN_ID }}
          PLANETSCALE_SERVICE_TOKEN: ${{ secrets.PLANETSCALE_SERVICE_TOKEN }}
          ORG_NAME: ${{ secrets.ORG_NAME }}
          DB_NAME: ${{ secrets.DB_NAME }}
