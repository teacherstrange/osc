name: 🚀 Deploy osc-studio
on:
  pull_request:
    types: [opened, reopened, synchronize, edited, closed]
permissions:
  actions: write
  contents: read

jobs:
  pre-check:
    name: check if workflow should run
    runs-on: ubuntu-latest
    steps:
      - uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            osc-studio:
              - 'packages/osc-studio/**'
            osc-studio-deploy:
              - '.github/workflows/osc-studio-deploy.yml'
            osc-studio-pr:
              - '.github/workflows/osc-studio-pr-branches.yml'
        # run only if some file in 'src' folder was changed

      - name: Get PR details
        run: |
          echo "${{ github.base_ref }} == main && ${{ github.event.pull_request.merged }} == true"
          echo "BASE_REF=${{ github.base_ref  }}" >> $GITHUB_ENV
          echo "PR_CLOSED=${{ github.event.pull_request.merged == true }}" >> $GITHUB_ENV

      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3

      - if: steps.changes.outputs.changes == '[]' || github.event.pull_request.draft == true
        name: Cancel the self CI workflow run
        run: ./bin/cancel.sh

  build:
    name: 🐳 Build
    if: echo "${{ github.base_ref }} == main && ${{ github.event.pull_request.merged }} == true"
    needs: pre-check
    runs-on: ubuntu-latest
    steps:
      - name: 🛑 Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.9.1

      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: "npm"

      # need to delete all other packages in this step

      - run: npm run setup
      - run: npm run build:osc-studio

      - run: rm -v -r ./package.json ./node_modules
      - run: mv -v -f packages/osc-studio/* .

      - name: format head_ref
        uses: bluwy/substitute-string-action@v1
        id: findandreplace
        with:
          _input-text: ${{ github.head_ref }}
          /: "-"

      - name: Get PR details
        run: |
          echo "HEAD_REF=${{ steps.findandreplace.outputs.result }}" >> $GITHUB_ENV
          echo "BASE_REF=${{ github.base_ref  }}" >> $GITHUB_ENV
          echo "PR_CLOSED=${{ github.event.pull_request.merged == true }}" >> $GITHUB_ENV

      - run: find ./packages -mindepth 1 ! -regex '^./packages/osc-ui\(/.*\)?' -delete

      - name: 👀 Read app name
        uses: SebRollen/toml-action@v1.0.0
        id: app_name
        with:
          file: "fly.toml"
          field: "app"

      - name: 🐳 Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      # Setup cache
      - name: ⚡️ Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: 🔑 Fly Registry Auth
        uses: docker/login-action@v1
        with:
          registry: registry.fly.io
          username: x
          password: ${{ secrets.FLY_API_TOKEN }}

      - name: 🐳 Docker build production
        id: docker-build-prod
        if: ${{ env.BASE_REF == 'main' && env.PR_CLOSED == 'true' }}
        uses: docker/build-push-action@v2
        with:
          file: ./Dockerfiles/Dockerfile.studio
          context: .
          push: true
          tags: registry.fly.io/${{ steps.app_name.outputs.value }}:${{ env.HEAD_REF }}-${{ github.sha }}
          build-args: |
            "VAPID_PUBLIC_KEY=${{ secrets.VAPID_PUBLIC_KEY }}"
            "VAPID_PRIVATE_KEY=${{ secrets.VAPID_PRIVATE_KEY }}"
            "COMMIT_SHA=${{ github.sha }}"
            "SANITY_STUDIO_API_DATASET=${{secrets.SANITY_STUDIO_API_DATASET}}"
            "SANITY_STUDIO_API_PROJECT_ID=${{secrets.SANITY_STUDIO_API_PROJECT_ID}}"
            "SANITY_STUDIO_API_TOKEN=${{secrets.SANITY_STUDIO_API_TOKEN}}"
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,mode=max,dest=/tmp/.buildx-cache-new

      # This ugly bit is necessary if you don't want your cache to grow forever
      # till it hits GitHub's limit of 5GB.
      # Temp fix
      # https://github.com/docker/build-push-action/issues/252
      # https://github.com/moby/buildkit/issues/1896
      - name: 🚚 Move cache
        if: steps.docker-build-prod.conclusion != 'skipped'
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

  deploy:
    name: 🚀 Deploy
    runs-on: ubuntu-latest
    needs: [build]

    steps:
      - name: 🛑 Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.9.1

      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3

      - run: rm -v -r ./package.json
      - run: mv -v -f packages/osc-studio/* .

      - name: format head_ref
        uses: bluwy/substitute-string-action@v1
        id: findandreplace
        with:
          _input-text: ${{ github.head_ref }}
          /: "-"

      - name: Get PR details
        run: |
          echo "HEAD_REF=${{ steps.findandreplace.outputs.result }}" >> $GITHUB_ENV
          echo "BASE_REF=${{ github.base_ref  }}" >> $GITHUB_ENV
          echo "PR_CLOSED=${{ github.event.pull_request.merged == true }}" >> $GITHUB_ENV

      - name: 👀 Read app name
        uses: SebRollen/toml-action@v1.0.0
        id: app_name
        with:
          file: "fly.toml"
          field: "app"

      # target prod, base release
      - name: 🚀 Deploy Production
        id: deploy-production
        if: ${{ env.BASE_REF == 'main' && env.PR_CLOSED == 'true' }}
        uses: superfly/flyctl-actions@1.3
        with:
          args: "deploy --image registry.fly.io/${{ steps.app_name.outputs.value }}:${{ env.HEAD_REF }}-${{ github.sha }}"
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
